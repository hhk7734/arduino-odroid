name=ODROID

##########################
# ODROID compile variables
##########################

compiler.path=

compiler.S.cmd=
compiler.S.flags=

compiler.c.cmd=gcc
compiler.c.flags=-c -g -lm -lpthread -lrt -lcrypt

compiler.cpp.cmd=g++
compiler.cpp.flags={compiler.c.flags}

compiler.ar.cmd=ar
compiler.ar.flags=rcs

compiler.combine.cmd={compiler.cpp.cmd}
compiler.combine.flags=-g -flto -fuse-linker-plugin -Wl,--gc-sections
compiler.combine.libs=-lm -lpthread -lrt -lcrypt

# override
build.extra_flags=
compiler.cross_compile=
compiler.S.extra_flags=
compiler.c.extra_flags=
compiler.cpp.extra_flags=
compiler.ar.extra_flags=
compiler.combine.extra_flags=

#########################
# ODROID compile patterns
#########################

recipe.preproc.macros="{compiler.path}{compiler.cross_compile}{compiler.cpp.cmd}" {compiler.cpp.flags} {preproc.macros.flags} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{preprocessed_file_path}"
preproc.macros.flags= -w -x c++ -E -CC

recipe.S.o.pattern="{compiler.path}{compiler.cross_compile}{compiler.S.cmd}" {compiler.S.flags} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"

recipe.c.o.pattern="{compiler.path}{compiler.cross_compile}{compiler.c.cmd}" {compiler.c.flags} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"

recipe.cpp.o.pattern="{compiler.path}{compiler.cross_compile}{compiler.cpp.cmd}" {compiler.cpp.flags} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"

recipe.ar.pattern="{compiler.path}{compiler.cross_compile}{compiler.ar.cmd}" {compiler.ar.flags} {compiler.ar.extra_flags} "{archive_file_path}" "{object_file}"

recipe.c.combine.pattern="{compiler.path}{compiler.cross_compile}{compiler.combine.cmd}" {compiler.combine.flags} {compiler.combine.extra_flags} {object_files} {archive_file_path} "-L{build.path}" -o "{build.path}/{build.project_name}.out" {compiler.combine.libs}

recipe.output.tmp_file={build.project_name}.out
recipe.output.save_file={build.project_name}.{build.variant}.out

##############
# ODROID tools
##############

tools.bash.path={runtime.platform.path}/tools/
tools.bash.cmd=terminal.sh

tools.bash.upload.params.verbose=
tools.bash.upload.params.quiet=
#tools.bash.upload.pattern="{path}{cmd}" {build.path}/{build.project_name}.out

tools.bash.program.params.verbose=
tools.bash.program.params.quiet=
tools.bash.program.pattern=sh "{path}{cmd}" {build.path}/{build.project_name}.out

# tools.bash.erase.pattern=
# tools.bash.bootloader.pattern=